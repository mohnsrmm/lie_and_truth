// Apply plugins specific to the application module.
// The 'plugins {}' block MUST be at the very top of the build.gradle file.
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // The 'dev.flutter.flutter-gradle-plugin' is applied via 'apply from' below.
    // DO NOT include it here when using 'apply from'.
    // id 'dev.flutter.flutter-gradle-plugin' // Ensure this line remains commented out or removed if using apply from.
    id 'com.google.gms.google-services' // Apply Google Services plugin for Firebase
}

// Load local.properties file, which typically contains Flutter SDK path and version info
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

// Get Flutter SDK path from local.properties
def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}
// Apply the Flutter plugin via its direct path from the Flutter SDK
// This is the common and robust way to apply the Flutter plugin for the app module.
// This 'apply from' statement can come after the plugins block.
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


// Get Flutter version code and name, with default values if not found
def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

// Load keystore.properties file for signing configurations
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// Android configuration block
android {
    // Compile using SDK version 34
    compileSdkVersion 34

    // Default configuration for the application
    defaultConfig {
        applicationId "com.nasr.lieandtruth2" // Unique application ID
        minSdkVersion 24 // Minimum SDK version supported
        targetSdkVersion 34 // Target SDK version
        versionCode flutterVersionCode.toInteger() // Version code from Flutter
        versionName flutterVersionName // Version name from Flutter
    }

    // Configure Java compatibility
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Configure Kotlin options
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Add Kotlin source directory to the main source set
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    // Signing configurations for release builds
    signingConfigs {
        release {
            // Placeholder values for release signing.
            // These lines are commented out as they rely on a 'key.properties' file
            // and should be uncommented and configured when preparing for release.
            // keyAlias keystoreProperties['keyAlias']
            // keyPassword keystoreProperties['keyPassword']
            // storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            // storePassword keystoreProperties['storePassword']
        }
    }

    // Build type configurations
    buildTypes {
        release {
            // Assign the release signing configuration to the release build type
            signingConfig signingConfigs.release
        }
    }
}

// Flutter specific configuration block
flutter {
    // Point to the root of the Flutter project relative to this build file
    source '../..'
}

// Dependencies for the application module
dependencies {
    // Kotlin standard library for JDK 7
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0"
    // Import the Firebase Bill of Materials (BOM) to manage Firebase versions
    implementation platform('com.google.firebase:firebase-bom:33.1.2')
    implementation 'com.google.firebase:firebase-analytics'
    // ExoPlayer library for media playback
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
}
